rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection rules
    match /users/{userId} {
      // Authenticated users can read/write their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.uid == userId; // Explicit read for own profile

      // Admin users can read and list all user documents
      allow read, list: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Allow anyone (authenticated or unauthenticated) to read a specific school document
      // if its role is 'school'.
      allow read: if resource.data.role == 'school';
      
      // Allow anyone to list all users (needed for school dropdown)
      // This is less secure but necessary for the current architecture
      allow list: if true;
    }

    // Allow authenticated users to create new documents in various collections
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        resource.data.teacher_id == request.auth.uid || 
        resource.data.school_id == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        exists(/databases/$(database)/documents/project_students/$(request.auth.uid + '_' + projectId))
      );
      allow update: if request.auth != null && (
        resource.data.teacher_id == request.auth.uid || 
        resource.data.school_id == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        exists(/databases/$(database)/documents/project_students/$(request.auth.uid + '_' + projectId))
      );
      allow delete: if request.auth != null && (
        resource.data.teacher_id == request.auth.uid || 
        resource.data.school_id == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Chat messages rules
    match /chat_messages/{messageId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        // User is the sender
        resource.data.user_id == request.auth.uid ||
        // User is the project teacher
        get(/databases/$(database)/documents/projects/$(resource.data.project_id)).data.teacher_id == request.auth.uid ||
        // User is the project school
        get(/databases/$(database)/documents/projects/$(resource.data.project_id)).data.school_id == request.auth.uid ||
        // User is an admin
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        // User is a student in the project
        exists(/databases/$(database)/documents/project_students/$(request.auth.uid + '_' + resource.data.project_id))
      );
      allow update, delete: if request.auth != null && resource.data.user_id == request.auth.uid;
    }
    
    match /project_students/{docId} {
      allow create, update, delete: if request.auth != null;
      allow read: if request.auth != null && (
        resource.data.student_id == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/projects/$(resource.data.project_id)).data.teacher_id == request.auth.uid ||
        get(/databases/$(database)/documents/projects/$(resource.data.project_id)).data.school_id == request.auth.uid
      );
    }
    
    match /project_tasks/{taskId} {
      allow create, update, delete: if request.auth != null;
      allow read: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/projects/$(resource.data.project_id)).data.teacher_id == request.auth.uid ||
        get(/databases/$(database)/documents/projects/$(resource.data.project_id)).data.school_id == request.auth.uid ||
        exists(/databases/$(database)/documents/project_students/$(request.auth.uid + '_' + resource.data.project_id))
      );
    }
    
    match /project_ideas/{ideaId} {
      allow create: if request.auth != null;
      allow read: if true; // Everyone can read project ideas
      allow update, delete: if request.auth != null && (
        resource.data.created_by == request.auth.uid || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    match /consultations/{consultationId} {
      allow create, read, update: if request.auth != null;
    }
    
    match /reviews/{reviewId} {
      allow create, read: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.student_id == request.auth.uid;
    }
    
    match /store_items/{itemId} {
      allow read: if true; // Everyone can read store items
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /learning_resources/{resourceId} {
      allow read: if true; // Everyone can read learning resources
      allow create, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /gallery_projects/{projectId} {
      allow read: if true; // Everyone can read gallery projects
      allow create: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'school'
      );
      allow update, delete: if request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'school' && 
         resource.data.school_id == request.auth.uid)
      );
    }
    
    match /summer_program_registrations/{registrationId} {
      allow create: if true; // Anyone can register for summer program
      allow read, update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
  }
}